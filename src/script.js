const params = new URLSearchParams(window.location.search);
const highlight = document.getElementById('highlight');
const nav = document.getElementById('nav');
const nav_spans = document.querySelectorAll('.nav-block span');
const nav_lessons = document.querySelectorAll('.nav-lesson');
const next_button = document.getElementById('next-button');
let timeOut;

nav.addEventListener('mousemove', e => {
  const size = highlight.clientWidth;
  highlight.style.left = e.pageX - size / 2 + 'px';
  highlight.style.top = e.pageY - size / 2 + 'px';
  highlight.classList.remove('hidden');
});

nav.addEventListener('mouseenter', e => {
  timeOut = setTimeout(() => {
    nav_spans.forEach(span => span.style.display = 'inline-block');
    nav_lessons.forEach(span => span.style.display = 'block');
  }, 120);
});

nav.addEventListener('mouseleave', () => {
  highlight.classList.add('hidden');
  nav_spans.forEach(span => span.style.display = 'none');
  nav_lessons.forEach(span => span.style.display = 'none');
  clearTimeout(timeOut);
});

const colors = [
  ["#ECC7F2", "#CE9DD4", "#CBAACF"],
  ["#FFADD4", "#D791B3", "#CD89AA"],
  ["#B2AFFE", "#8F8CCF", "#7D7AB5"],
  ["#97D1F9", "#70ABD1", "#6396B8"],
  ["#E8F1A0", "#C9D384", "#AAB270"],
  ["#FECF9B", "#DDB285", "#C49D76"],
  ["#FFAFB0", "#D78383", "#B86E6D"],
];

let currentBlock = null;

document.getElementById(`nav-${params.get('page')}`).classList.add('active');
document.getElementById(`nav-${params.get('lesson')}`)?.classList.add('nav-lesson-active');

const blockName = document.getElementById(`block-name`);
const blocP1 = document.getElementById(`block-p-1`);
const blocP2 = document.getElementById(`block-p-2`);

function setText() {
  blockName.textContent = meta[currentBlock - 1].header;
  blocP1.textContent = meta[currentBlock - 1].p1;
  blocP2.textContent = meta[currentBlock - 1].p2;
}


function changeState(nextState) {
  const bl = document.getElementById(`block-${nextState}`);
  if (currentBlock) {
    const block = document.getElementById(`block-${currentBlock}`);
    colors[currentBlock - 1].forEach((col, idx) => {
      block.getElementsByClassName(`col-${idx + 1}`)[0].style.fill = darker(col);
    });
    block.classList.remove('active-block');
  }
  currentBlock = nextState;
  colors[currentBlock - 1].forEach((col, idx) => {
    bl.getElementsByClassName(`col-${idx + 1}`)[0].style.fill = col;
  })
  setText();
  bl.classList.add('active-block');
}


for (let i = 1; i <= 7; ++i) {
  const bl = document.getElementById(`block-${i}`);
  bl.addEventListener('click', () => changeState(i))
}


colors.forEach((color, idx) => {
  const block = document.getElementById(`block-${idx + 1}`);
  color.forEach((col, i) => {
    block.getElementsByClassName(`col-${i + 1}`)[0].style.fill = darker(col);
  })
  block.style.zIndex = colors.length - idx + 10;
})

function darker(hex, k = 0.6, alpha = 1) {
  if (hex[0] !== '#' || (hex.length !== 7 && hex.length !== 4)) {
    return null;
  }

  if (hex.length === 4) {
    hex = '#' + [hex[1], hex[1], hex[2], hex[2], hex[3], hex[3]].join('');
  }

  let r = parseInt(hex.slice(1, 3), 16);
  let g = parseInt(hex.slice(3, 5), 16);
  let b = parseInt(hex.slice(5, 7), 16);

  return `rgba(${r * k}, ${g * k}, ${b * k}, ${alpha})`;
}

next_button.addEventListener('click', () => {
  if (currentBlock === null) {
    changeState(7);
  } else if (currentBlock === 0) {
    changeState(7);
  } else {
    changeState(currentBlock - 1);
  }
})

const meta = [
  {
    header: '7. Прикладной уровень',
    p1: 'Прикладной уровень является седьмым и последним уровнем в модели OSI и представляет собой тот слой, который находится ближе всего к конечным пользователям. Этот уровень включает в себя разнообразные прикладные программы и службы, которые обеспечивают пользовательский интерфейс и реализуют конкретные функции, необходимые для взаимодействия с сетевыми ресурсами. Прикладной уровень служит своеобразным мостом между программным обеспечением, используемым пользователями, и нижележащими уровнями сетевой инфраструктуры, тем самым обеспечивая окончательную доставку услуг и ресурсов.',
    p2: 'На этом уровне реализуются различные сетевые приложения и протоколы, такие как HTTP (для веб-браузеров), SMTP (для электронной почты), FTP (для передачи файлов), а также множество других, предназначенных для конкретных задач, таких как обмен сообщениями, потоковое видео, онлайн-игры и многие другие. Прикладной уровень отвечает за такие функции, как аутентификация и авторизация пользователей, управление сессиями и транзакциями, а также за обработку запросов и данных, поступающих от пользователя. Основной задачей прикладного уровня является предоставление удобных и понятных пользователю интерфейсов и функций, позволяющих взаимодействовать с сетью и использовать ее ресурсы. Это делает его ключевым элементом в обеспечении высокого уровня удобства и эффективности работы в сети для конечных пользователей.'
  },
  {
    header: '6. Уровень представления',
    p1: 'Уровень представления в модели OSI является шестым уровнем и отвечает за обработку данных таким образом, чтобы они были понятны как приложениям, так и пользователям. Этот уровень действует как переводчик между форматами данных, используемыми приложениями и сетью. Одна из основных функций уровня представления — преобразование данных из одной кодировки в другую, что необходимо для обеспечения совместимости между различными системами и приложениями. Например, если одно устройство использует кодировку ASCII, а другое — UTF-8, уровень представления переводит текст из одной кодировки в другую, чтобы обеспечить их взаимопонимание.',
    p2: 'Кроме преобразования кодировок, уровень представления также отвечает за обработку структурированных данных, например, форматов файлов (таких как JPEG, GIF, XML) и данных баз данных. Он обеспечивает их корректное представление и интерпретацию. Другие важные функции уровня представления включают сжатие данных, что позволяет сократить объем передаваемых данных и повысить эффективность сетевого взаимодействия, а также шифрование данных для обеспечения их конфиденциальности. Эти механизмы помогают улучшить производительность сетевых приложений и повысить безопасность передачи данных.',
  },
  {
    header: '5. Сеансовый уровень',
    p1: 'Сеансовый уровень является пятым уровнем в модели OSI и играет важную роль в управлении и поддержке сессий связи между приложениями, работающими на различных устройствах. Основная функция этого уровня заключается в установлении, управлении и завершении сессий, которые представляют собой длительные интерактивные информационные обмены между приложениями.',
    p2: 'Сеансовый уровень позволяет приложениям на разных устройствах устанавливать, организовывать и синхронизировать обмен данными. Например, при работе с веб-приложениями сеансовый уровень может управлять сессиями пользователей, поддерживая стабильность и последовательность взаимодействия. Это включает в себя механизмы синхронизации, которые помогают поддерживать порядок и целостность данных, передаваемых в ходе сессии. Также он обеспечивает восстановление сессии в случае обрыва связи или других сбоев, что позволяет приложениям продолжить обмен данными с момента последнего корректного состояния.',
  },
  {
    header: '4. Транспортный уровень',
    p1: 'Транспортный уровень модели OSI выполняет роль посредника между верхними слоями, отвечающими за приложения (Host Layers), и нижними слоями, связанными с передачей данных (Media Layers). Его основная задача заключается в надежной и эффективной транспортировке данных между системами. На этом уровне данные разбиваются на более мелкие сегменты для удобства передачи через сеть и в последующем собираются в исходном порядке на стороне получателя. Такой подход обеспечивает более эффективное управление данными и уменьшает вероятность ошибок в сети.',
    p2: 'Транспортный уровень управляет качеством и надежностью передачи данных. Он отвечает за контроль за доставкой данных, обеспечивая их правильную и полную передачу. Этот уровень использует различные протоколы, такие как TCP (Transmission Control Protocol) и UDP (User Datagram Protocol), для управления передачей данных. TCP обеспечивает надежную, упорядоченную и безошибочную передачу, контролируя потери пакетов и исправляя ошибки. Это делает его идеальным для приложений, где важна точность данных, таких как веб-страницы или файлы. UDP, с другой стороны, является более простым и быстрым протоколом, который не гарантирует доставку, порядок или целостность данных, что делает его подходящим для приложений, требующих высокой скорости передачи и где некоторые потери данных приемлемы, например, в потоковом видео или онлайн-играх.',
  },
  {
    header: '3. Сетевой уровень',
    p1: 'Сетевой уровень, занимающий третью позицию в иерархии модели OSI, вводит концепцию маршрутизации, которая является ключевым элементом в функционировании больших и сложных сетей. Этот уровень отвечает за определение и управление маршрутами передачи данных между различными узлами в сети, что включает нахождение оптимального пути от отправителя к получателю. Основными устройствами, работающими на сетевом уровне, являются маршрутизаторы (роутеры), которые анализируют информацию в заголовках пакетов данных для определения их конечного назначения.',
    p2: 'Ключевой задачей маршрутизаторов является пересылка пакетов данных из одной подсети в другую, что обеспечивается за счет использования таблиц маршрутизации. Эти таблицы содержат информацию о различных путях передачи данных в сети и позволяют маршрутизаторам эффективно выбирать наилучший маршрут для каждого пакета. Сетевой уровень также включает в себя обработку адресов на уровне протоколов, таких как IP-адреса, которые используются для идентификации отправителя и получателя данных в глобальной сети. Одной из важных функций сетевого уровня является обеспечение устойчивости и адаптивности сети к возможным изменениям и неполадкам, таким как отказы оборудования или перегрузки, что достигается за счет динамической перенастройки маршрутов.',
  },
  {
    header: '2. Канальный уровень',
    p1: 'Канальный уровень, являющийся вторым слоем в модели OSI, играет ключевую роль в обеспечении надежной передачи данных между соседними узлами сети. На этом уровне биты данных, полученные с физического уровня, организуются в структурированные единицы, называемые кадрами (frames). Каждый кадр содержит не только сами данные, но и служебную информацию, включающую адреса отправителя и получателя, что обеспечивает их корректную адресацию и доставку. Кроме того, для обеспечения целостности данных при передаче используются механизмы обнаружения и исправления ошибок, такие как контрольные суммы (checksums) и коды коррекции ошибок (error correction codes).',
    p2: 'Одной из ключевых функций канального уровня является управление доступом к среде передачи данных (Media Access Control, MAC). Это включает в себя определение того, как и когда устройства могут передавать данные, чтобы избежать конфликтов и перегрузок в сети. В этом контексте канальный уровень определяет протоколы для определения очередности передачи данных между устройствами и регулирования доступа к общей среде передачи, что особенно важно в многопользовательских и беспроводных сетях. Канальный уровень также отвечает за установление, поддержание и разрыв логических соединений между узлами сети, обеспечивая тем самым стабильность и надежность сетевого взаимодействия.',
  },
  {
    header: '1. Физический уровень',
    p1: 'Этот уровень отвечает за физическую передачу данных между устройствами в сети. Он включает в себя всё, что связано с электрическими и физическими характеристиками оборудования, такими как напряжение, скорость передачи данных, физические соединения (кабельные и беспроводные), и способы модуляции.',
    p2: 'Физический уровень работает с битами данных, преобразуя их в электрические, оптические или радио сигналы для передачи через различные медиа, такие как медные кабели, волоконно-оптические линии, а также беспроводные каналы, включая инфракрасное соединение, Wi-Fi, Bluetooth, GSM, 3G, 4G, 5G и другие. Устройства на этом уровне включают в себя кабели, коннекторы, повторители, сетевые адаптеры, хабы и другое оборудование, обеспечивающее передачу сигналов.',
  },
]
